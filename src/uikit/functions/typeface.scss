/*
typeface-get($scheme, $tone)

Get a named type size from the typeface map
see `construct/settings/_typeface.scss`

Compatible untested.

$name - The logical name

Styleguide Core.Functions.Type
*/

/*
Turn a map into a series of css `attribute: value;`
*/
@mixin map-as-attributes($property-value-map) {
  @each $property, $value in $property-value-map {
    $property: $value;
  }
}


@mixin typeface-get($family, $variant: default) {
  $family-map: map-get($settings__typeface, $family);
  $attribute-map: ();

  // test if $family-map has $variant
  @if not map-has-key($family-map, $variant) {
    @warn "Font name `#{$family}` doesn't define a variant named #{$variant}.";
    // try to use default instead.
    @include map-as-attributes(map-get($family-map, default));
  }
  // $variant exists, lets use it.
  @else {
    // print out a list of attributes.
    @include map-as-attributes(map-get($family-map, $variant));
  }

}

