{"componentChunkName":"component---src-templates-page-tsx","path":"/about/intro","result":{"data":{"allSitePage":{"nodes":[{"id":"SitePage /dev-404-page/","path":"/dev-404-page/","context":null},{"id":"SitePage /","path":"/","context":{"navs":["global"],"title":"Home"}},{"id":"SitePage /about/intro","path":"/about/intro","context":{"navs":null,"title":"about"}},{"id":"SitePage /about/me","path":"/about/me","context":{"navs":["global","landing"],"title":"Me"}},{"id":"SitePage /posts/2014-05-11-wintersmithplugin-externalmounter","path":"/posts/2014-05-11-wintersmithplugin-externalmounter","context":{"navs":null,"title":"Wintersmith Plugin. Mounter"}},{"id":"SitePage /posts/2016-01-01-automation-what-i-have-learnt","path":"/posts/2016-01-01-automation-what-i-have-learnt","context":{"navs":null,"title":"Automation, what I've learnt this year."}},{"id":"SitePage /posts/2018-04-18-reducing-risk-in-frontend-development-with-docker","path":"/posts/2018-04-18-reducing-risk-in-frontend-development-with-docker","context":{"navs":null,"title":"Reducing Risk in Frontend Development with Docker"}},{"id":"SitePage /posts/2018-05-24-how-i-use-npm","path":"/posts/2018-05-24-how-i-use-npm","context":{"navs":null,"title":"How I use NPM"}},{"id":"SitePage /posts/2018-10-03-bem-and-the-case-for-simplicity","path":"/posts/2018-10-03-bem-and-the-case-for-simplicity","context":{"navs":null,"title":"BEM and the case for simplicity"}},{"id":"SitePage /posts/","path":"/posts/","context":{"navs":["landing","global"],"title":"Words"}},{"id":"SitePage /posts/2014-05-01-bust-the-cache-out-of-it","path":"/posts/2014-05-01-bust-the-cache-out-of-it","context":{"navs":null,"title":"Bust the cache out of it"}}]},"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"about\",\n  \"template\": \"page\",\n  \"date\": \"2020-09-29T00:00:00.000Z\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h4\", {\n    \"id\": \"greetings\"\n  }, \"Greetings\"), mdx(\"p\", null, \"It does not surprise me, that even after half my life has elapsed, years of churn in web development still bring to the horizon new tricks to keep me entertained.\"), mdx(\"p\", null, \"I am a restless thinker, I compliment teams lazy enough to investigate automating the mundane, a team that shrinks in horror at the thought of deployment without quality control. A team that seeks modularity of their toolkits. Toolkits shared for the world to use (and freely contribute to).\"), mdx(\"p\", null, \"I'm familiar with most work flows like \\\"get it done\\\", \\\"Wait let's think about it\\\" and my favourite... \\\"No really, let's plan this one properly\\\". But really, I've found that scrum based agile with healthy behaviour driven development captures efficiently and completely all the needs and pitfalls of a team producing for stakeholders.\"), mdx(\"p\", null, \"Over the years I've primarily stuck to using modern open source frameworks, as such you'll find my efficiency is greatest with ES6, Scss, VueJS, Webpack, NodeJS, Python and Django. Although I'm sure I can nail any language, I'd prefer to work on Linux workstations and servers.\"), mdx(\"p\", null, \"I would be delighted to join a team that makes enthusiastic use of Docker and Linux for the purposes of deployment, development and infrastructure automation.\"), mdx(\"p\", null, \"My health is important to me, to which I partake in activities such as powerlifting, rock climbing and cycling.\"), mdx(\"p\", null, \"At the moment I'm in Adelaide, South Australia. However I am looking forward to receiving offers pretty much anywhere in the world.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"about"}}},"pageContext":{"id":"2740df81-d5c1-5db8-a0f3-dfec7400bdc3","title":"about","template":"page","date":"2020-09-29T00:00:00.000Z"}},"staticQueryHashes":[]}