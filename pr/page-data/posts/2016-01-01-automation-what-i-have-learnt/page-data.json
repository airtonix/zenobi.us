{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/2016-01-01-automation-what-i-have-learnt/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"template\": \"post\",\n  \"date\": \"2016-01-01T00:00:00.000Z\",\n  \"title\": \"Automation, what I've learnt this year.\",\n  \"stage\": \"draft\",\n  \"tags\": \"nodejs, webpack, browserify, es6, selenium, vuejs\",\n  \"icon\": \"info_outline\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This year (and the next) mark the time in my growth where I become more pragmatic in my world view. Evolution and survival of the most pragmatic.\"), mdx(\"p\", null, \"There is more focus on creating systems for people.\"), mdx(\"h2\", {\n    \"id\": \"automation\"\n  }, \"Automation\"), mdx(\"p\", null, \"I really dislike checklists... a lot.\"), mdx(\"p\", null, \"So if I can turn a checklist into code, I will. Now I have more time to work with the team to overcome feature obstacles.\"), mdx(\"p\", null, \"Checklists as code are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git hooks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"linters\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e2e tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tools that generate things\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deployment code\")), mdx(\"h3\", {\n    \"id\": \"somethings-cant-be-autometed-yet\"\n  }, \"Somethings can't be autometed (yet)\"), mdx(\"p\", null, \"I've discovered some checklists are too expensive as code.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"visual regression testing\")), mdx(\"p\", null, \"Here we found that a tool like wraith to publish incremental snapshots over the life of a project is great for quickly highlight changes. A designer or developer can then make the call if the change is acceptable.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Unused Code\")), mdx(\"p\", null, \"Often styles and javascript are created for components that may only come to life when a CMS user enables a setting or adds certain types of content to the page.\"), mdx(\"p\", null, \"In this case we've found that a simple component library gives quick indication about what css/js relates to what html mark-up.\"), mdx(\"p\", null, \"Ideally a developer should not leave dead code in the project.\"), mdx(\"h2\", {\n    \"id\": \"webpack\"\n  }, \"Webpack\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"webpack. the hero we need not the one we deserve.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"speed differences with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gulp + browserify\"), \" vs \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"webpack dev server\"), \" are day and night. Gulp is 20secs everytimg, webpack has an initial time cost, but each change thereafter is relfective of affected code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scriptjs\"), \" loading cdn libs, use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"system.import(/* webpackChunkName: 'vendor/jquery' */ @vendor/jquery')\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cdn might change over next 3years. Most commerical projects are legacy the moment they are deployed. No one likes working on them, so don't make them fragile.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"assets can now easily be fingerprinted. yay \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[chunkhash]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the magic comment means it's also lazy loaded.\")))), mdx(\"h2\", {\n    \"id\": \"gulp\"\n  }, \"Gulp\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gulp is one of those things. It starts out small, quickly turns into a train wreck and your holding all the pieces.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most seek to create a black box of tasks, reality is they end up with a mountain of unmaintainable code sparse of desired features... because streams.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For someone who spends their time looking at directory trees and file managers, It's a mental model that makes sense to the mind incrementally chipping away at a problem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Errors are swallowed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most people don't even know how it really works, therefore most of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gulpfiles\"), \" I've looked into are similar to what I imagine a forensics team encounters at mass murder scenes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"streams are awesome. when used for the right scenario.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Automation, what I've learnt this year.","tags":"nodejs, webpack, browserify, es6, selenium, vuejs","date":"2016-01-01T00:00:00.000Z"}}},"pageContext":{"id":"10d2b91c-224d-5fe3-8fd9-4519c28be451","title":"Automation, what I've learnt this year.","template":"post","date":"2016-01-01T00:00:00.000Z","stage":"draft","tags":"nodejs, webpack, browserify, es6, selenium, vuejs","icon":"info_outline"}},"staticQueryHashes":[]}