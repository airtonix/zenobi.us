version: 2

jobs:

# generate_website:
#   docker:
#     - image: circleci/node:8.9.0
#   working_directory: /build

# deploy_website:
#   docker:
#     - image: circleci/node:8.9.0
#   working_directory: /build

# test_image:
#   docker:
#     - image: circleci/node:8.9.0
#   working_directory: /build
#   steps:
#     - checkout
#     -

  build_image:
    working_directory: /build
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

# register_image:
#   docker:
#     - image: circleci/golang:latest
#   working_directory: /build
#   steps:
#     - setup_remote_docker: {version: 17.09.0-ce}
#     - checkout
#     - run:
#         name: Build & Deploy Image
#         command: npm run docker:publish



workflows:
  version: 2

  docker__build_test_deploy:
    jobs:
      - build_image
        # filters:
        #   tags: {only: /v.*/}
      # - test_image:
      #   requires: [build_image]
      #   filters:
      #     tags: {only: /v.*/}
      # - deploy_image:
      #   requires: [test_image]
      #   filters:
      #     tags: {only: /v.*/}

  # website__generate_deploy:
  #   jobs:
  #     - build_website:
  #       filters:
  #         branches: {only: /master/}
  #     - deploy_website:
  #       requires: [build_website]
  #       filters:
  #         branches: {only: /master/}