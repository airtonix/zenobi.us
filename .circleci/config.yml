version: 2

jobs:

  build_image:
    working_directory: /build
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - app-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - checkout
      - run:
          name: Build application Docker image
          when: on_success
          command: |
              docker build --cache-from=app -t app .
      - run:
          name: Push image to dockerhub
          when: on_success
          command: |
            docker login --username=${DOCKER_USERNAME} --password=${DOCKER_PASSWORD}
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "tagging image as ${DOCKER_USERNAME}/zenobius:${CIRCLE_BUILD_NUM}"
              docker tag app ${DOCKER_USERNAME}/zenobius:${CIRCLE_BUILD_NUM}
              docker push ${DOCKER_USERNAME}/zenobius:${CIRCLE_BUILD_NUM}
              echo "tagging image as ${DOCKER_USERNAME}/zenobius:latest"
              docker tag app ${DOCKER_USERNAME}/zenobius:latest
              docker push ${DOCKER_USERNAME}/zenobius:latest
            else
              TAG=$( echo "${CIRCLE_BRANCH}-${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}" | sed 's/\W/_/g' )
              echo "tagging image as ${DOCKER_USERNAME}/zenobius:${TAG}"
              docker tag app ${DOCKER_USERNAME}/zenobius:${TAG}
              docker push ${DOCKER_USERNAME}/zenobius:${TAG}
            fi
      - run:
          name: Save Docker image layer cache
          when: on_success
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          when: on_success
          key: v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - /caches/app.tar

workflows:
  version: 2

  docker__build_test_deploy:
    jobs:
      - build_image
